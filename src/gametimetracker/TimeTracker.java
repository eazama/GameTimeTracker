/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gametimetracker;

import java.awt.datatransfer.*;
import java.awt.Toolkit;

/**
 *
 * @author ericazama
 */
public class TimeTracker extends javax.swing.JFrame implements ClipboardOwner {

    private boolean isTiming = false;

    /**
     * Creates new form Interface
     */
    public TimeTracker() {
        initComponents();
        prefs.addAll(utilities.TextFileManager.readFile("Preferences/Prefs.txt"));
        loadIgnore();
        loadReplacements();
        loadApps();
        buildCombo();
        buildSystems();
        for (int i = 0; i < cboApps.getItemCount(); i++) {
            System.out.println(cboApps.getItemAt(i));
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cboApps = new javax.swing.JComboBox(){
            @Override
            public java.awt.Dimension getMaximumSize() {
                java.awt.Dimension dim = super.getMaximumSize();
                dim.width = getPreferredSize().width;
                return dim;
            }
        };
        btnStart = new javax.swing.JButton();
        btnList = new javax.swing.JButton();
        btnSteam = new javax.swing.JButton();
        txtAddApp = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        cboSystems = new javax.swing.JComboBox(){
            @Override
            public java.awt.Dimension getMaximumSize() {
                java.awt.Dimension dim = super.getMaximumSize();
                dim.width = getPreferredSize().width;
                return dim;
            }
        };

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("00:00:00");

        cboApps.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "hello", "what's", "up", "there", "hi", "how", "are", "you", "yooou", "yu" }));
        cboApps.setPreferredSize(new java.awt.Dimension(303, 27));
        cboApps.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboAppsActionPerformed(evt);
            }
        });

        btnStart.setText("Start");
        btnStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartActionPerformed(evt);
            }
        });

        btnList.setText("List");
        btnList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListActionPerformed(evt);
            }
        });

        btnSteam.setText("Get Steam/Desura");
        btnSteam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSteamActionPerformed(evt);
            }
        });

        btnAdd.setText("Add App");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        cboSystems.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "NGC" }));
        cboSystems.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboSystemsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cboApps, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtAddApp, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cboSystems, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnStart)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnList)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSteam, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cboApps, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnStart)
                    .addComponent(btnList)
                    .addComponent(btnSteam))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAddApp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdd)
                    .addComponent(cboSystems, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cboAppsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboAppsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboAppsActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        if (!utilities.TextFileManager.containsIgnoreCase("GameLists/" + cboSystems.getSelectedItem() + ".txt", txtAddApp.getText())) {
            utilities.TextFileManager.appendToFile("GameLists/" + cboSystems.getSelectedItem() + ".txt", txtAddApp.getText());
            apps.add(txtAddApp.getText() + " (" + cboSystems.getSelectedItem() + ")");
            buildCombo();
            txtAddApp.setText("");
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnSteamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSteamActionPerformed
        //ReadXMLSteam.read();
        ReadXMLDesura.read(getPref("DesuraLogin"), getPref("DesuraPass"));
        ReadXMLSteam.read(getPref("SteamID"));
        for (String str : apps) {
            System.out.println(str);
        }
        loadApps();
        buildCombo();
    }//GEN-LAST:event_btnSteamActionPerformed

    private void btnStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartActionPerformed
        if (!isTiming) {
            startTime = new java.util.Date().getTime();
            cboApps.setEnabled(false);
            btnStart.setText("Stop");
            btnSteam.setEnabled(false);
            btnAdd.setEnabled(false);
            btnList.setEnabled(false);
            cboSystems.setEnabled(false);
            txtAddApp.setEnabled(false);
            timer = new java.util.Timer();
            timer.schedule(new titleTimer(this), 0, 1000);
            isTiming = true;
        } else {
            endTime = new java.util.Date().getTime();
            timer.cancel();
            cboApps.setEnabled(true);
            btnStart.setText("Start");
            btnSteam.setEnabled(true);
            btnList.setEnabled(true);
            cboSystems.setEnabled(true);
            btnAdd.setEnabled(true);
            txtAddApp.setEnabled(true);
            recordTime();
            uploadRecord();
            isTiming = false;
        }
    }//GEN-LAST:event_btnStartActionPerformed

    private void btnListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListActionPerformed
        String msg = "";
        for (String str : apps) {
            msg = msg.concat(str + "\n");
        }
        setClipboardContents(msg);

        javax.swing.JOptionPane.showMessageDialog(rootPane, "List copied to clipboard");
    }//GEN-LAST:event_btnListActionPerformed

    private void cboSystemsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboSystemsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboSystemsActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {


        /* Set the Nimbus look and feel*/
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        /*
         try {
         for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
         if ("Nimbus".equals(info.getName())) {
         javax.swing.UIManager.setLookAndFeel(info.getClassName());
         break;
         }
         }
         } catch (ClassNotFoundException ex) {
         java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
         } catch (InstantiationException ex) {
         java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
         } catch (IllegalAccessException ex) {
         java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
         } catch (javax.swing.UnsupportedLookAndFeelException ex) {
         java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
         }
         */
        //</editor-fold>


        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TimeTracker().setVisible(true);
            }
        });
    }

    private void loadApps() {
        apps.removeAll(apps);

        for (java.io.File file : new java.io.File("GameLists").listFiles()) {
            if (file.getName().equalsIgnoreCase(".DS_Store")) {
                continue;
            }
            if (file.isDirectory()) {
                continue;
            }
            //System.out.println(file.getName());
            for (String str : utilities.TextFileManager.readFile(file.getAbsolutePath())) {
                if (!ignore.contains(str)) {
                    apps.add(str);
                }
            }
        }
        for (String str : loadList("GameLists/Clients/Steam.txt")) {
            if (!ignore.contains(str)
                    && !str.toLowerCase().contains("dlc")) {
                apps.add(str);
            }
        }

        for (String str : loadList("GameLists/Clients/Desura.txt")) {
            if (!ignore.contains(str)
                    && !apps.contains(str)) {
                apps.add(str);
            }
        }
    }

    private void buildCombo() {
        cboApps.removeAllItems();
        for (String str : apps) {
            cboApps.addItem(str);
        }
    }

    private void buildSystems() {
        cboSystems.removeAllItems();
        for (String str : utilities.TextFileManager.readFile("Preferences/Systems.txt")) {
            cboSystems.addItem(str);
        }
    }

    public String getPref(String prefName) {
        for (String str : prefs) {
            if (str.split(":")[0].equalsIgnoreCase(prefName)) {
                return str.split(":")[1];
            }
        }
        return null;
    }

    private void loadIgnore() {
        ignore.removeAll(ignore);
        ignore.addAll(utilities.TextFileManager.readFile("Preferences/Ignore.txt"));
    }

    private void loadReplacements() {
        replace.removeAll(replace);
        replace.addAll(utilities.TextFileManager.readFile("Preferences/Replacements.txt"));
    }

    private java.util.Collection<String> loadList(String filename) {
        java.util.LinkedList<String> retVal = new java.util.LinkedList<String>();
        retVal.addAll(utilities.TextFileManager.readFile(filename));
        for (int i = 0; i < retVal.size(); i++) {
            for (String str2 : replace) {
                if (str2.split("->")[0].equals(retVal.get(i))) {
                    retVal.set(i, str2.split("->")[1]);
                }
            }
        }
        return retVal;
    }

    private void recordTime() {
        utilities.TextFileManager.appendToFile("Preferences/RecordedTimes.txt",
                String.format("%s,%d,%d", cboApps.getSelectedItem(), startTime, endTime));
    }

    private void uploadRecord() {
        Spreadsheet sheet;
        try {
            sheet = new Spreadsheet(getPref("GoogleAccount"), getPref("GooglePass"), getPref("SpreadsheetName"), getPref("WorksheetName"));
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
            sheet = null;
        }

        if (sheet == null) {
            return;
        }

        java.util.LinkedList<String> records = new java.util.LinkedList<String>();
        records.addAll(utilities.TextFileManager.readFile("Preferences/RecordedTimes.txt"));

        utilities.TextFileManager.clearFile("Preferences/RecordedTimes.txt");

        for (String str : records) {
            try {
                sheet.addRow(str.split(",")[0], Long.parseLong(str.split(",")[1]), Long.parseLong(str.split(",")[2]));
            } catch (Exception ex) {
                utilities.TextFileManager.appendToFile("Preferences/RecordedTimes.txt", str);
                continue;
            }
        }
    }

    private TimeEntry getTimeEntry(String gameName) {
        for (TimeEntry ent : gameTimes) {
            if (ent.gameName.equals(gameName)) {
                return ent;
            }
        }
        TimeEntry newEntry = new TimeEntry(gameName);
        gameTimes.add(newEntry);
        return newEntry;
    }
    private java.util.LinkedList<TimeEntry> gameTimes = new java.util.LinkedList<TimeEntry>();
    private long startTime;
    private long endTime;
    private titleTimer tTimer = new titleTimer(this);
    private java.util.Timer timer;
    private java.util.TreeSet<String> apps = new java.util.TreeSet<String>(String.CASE_INSENSITIVE_ORDER);
    private java.util.LinkedList<String> prefs = new java.util.LinkedList<String>();
    private java.util.LinkedList<String> ignore = new java.util.LinkedList<String>();
    private java.util.LinkedList<String> replace = new java.util.LinkedList<String>();
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnList;
    private javax.swing.JButton btnStart;
    private javax.swing.JButton btnSteam;
    private javax.swing.JComboBox cboApps;
    private javax.swing.JComboBox cboSystems;
    private javax.swing.JTextField txtAddApp;
    // End of variables declaration//GEN-END:variables

    @Override
    public void lostOwnership(Clipboard clpbrd, Transferable t) {
    }

    private class titleTimer extends java.util.TimerTask {

        private TimeTracker window;

        public titleTimer(TimeTracker inter) {
            window = inter;
        }

        @Override
        public void run() {
            long diff = new java.util.Date().getTime() - window.startTime;
            window.setTitle(String.format("%02d:%02d:%02d", diff / (1000 * 60 * 60), diff / (1000 * 60) % 60, diff / (1000) % 60));
        }
    }

    public void setClipboardContents(String aString) {
        StringSelection stringSelection = new StringSelection(aString);
        Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
        clipboard.setContents(stringSelection, this);
    }
}
